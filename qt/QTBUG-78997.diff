diff --git a/qtwebengine/src/3rdparty/chromium/services/device/geolocation/wifi_data_provider_mac.mm b/qtwebengine/src/3rdparty/chromium/services/device/geolocation/wifi_data_provider_mac.mm
index 278a538..1b53ce4 100644
--- a/qtwebengine/src/3rdparty/chromium/services/device/geolocation/wifi_data_provider_mac.mm
+++ b/qtwebengine/src/3rdparty/chromium/services/device/geolocation/wifi_data_provider_mac.mm
@@ -22,10 +22,8 @@
 #include "services/device/geolocation/wifi_data_provider_common.h"
 #include "services/device/geolocation/wifi_data_provider_manager.h"
 
-extern "C" NSString* const kCWScanKeyMerge;
-
 @interface CWInterface (Private)
-- (NSArray*)scanForNetworksWithParameters:(NSDictionary*)params
+- (NSSet<CWNetwork *> *)scanForNetworksWithName:(NSString *)networkName
                                     error:(NSError**)error;
 @end
 
@@ -46,9 +44,6 @@
 
 bool CoreWlanApi::GetAccessPointData(WifiData::AccessPointDataSet* data) {
   base::mac::ScopedNSAutoreleasePool auto_pool;
-  // Initialize the scan parameters with scan key merging disabled, so we get
-  // every AP listed in the scan without any SSID de-duping logic.
-  NSDictionary* params = @{ kCWScanKeyMerge : @NO };
 
   NSSet* supported_interfaces = [CWInterface interfaceNames];
   NSUInteger interface_error_count = 0;
@@ -64,8 +59,8 @@
     const base::TimeTicks start_time = base::TimeTicks::Now();
 
     NSError* err = nil;
-    NSArray* scan =
-        [corewlan_interface scanForNetworksWithParameters:params error:&err];
+    NSSet<CWNetwork *>* scan =
+        [corewlan_interface scanForNetworksWithName:nil error:&err];
     const int error_code = [err code];
     const int count = [scan count];
     // We could get an error code but count != 0 if the scan was interrupted,
diff --git a/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h b/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
index b2d56d8..8626046 100644
--- a/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
+++ b/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
@@ -5,6 +5,7 @@
 #ifndef BASE_MAC_FOUNDATION_UTIL_H_
 #define BASE_MAC_FOUNDATION_UTIL_H_

+#include <AvailabilityMacros.h>
 #include <CoreFoundation/CoreFoundation.h>

 #include <string>
@@ -52,7 +53,7 @@
 typedef unsigned int NSSearchPathDomainMask;
 #endif

-#if defined(OS_IOS)
+#if defined(OS_IOS) || defined(MAC_OS_X_VERSION_10_15)
 typedef struct CF_BRIDGED_TYPE(id) __SecCertificate* SecCertificateRef;
 typedef struct CF_BRIDGED_TYPE(id) __SecKey* SecKeyRef;
 typedef struct CF_BRIDGED_TYPE(id) __SecPolicy* SecPolicyRef;
diff --git a/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm b/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm
index 9af0cee..eced952 100644
--- a/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm
+++ b/qtwebengine/src/3rdparty/chromium/components/crash/core/common/objc_zombie.mm
@@ -51,7 +51,17 @@
 const size_t kBacktraceDepth = 20;

 // The original implementation for |-[NSObject dealloc]|.
-IMP g_originalDeallocIMP = NULL;
+#if OBJC_OLD_DISPATCH_PROTOTYPES
+using RealIMP = IMP;
+#else
+// With !OBJC_OLD_DISPATCH_PROTOTYPES the runtime hasn't changed and IMP is
+// still what it always was, but the SDK is hiding the details now outside the
+// objc runtime. It is safe to define |RealIMP| to match the older definition of
+// |IMP|.
+using RealIMP = id (*)(id, SEL, ...);
+#endif
+
+RealIMP g_originalDeallocIMP = NULL;

 // Classes which freed objects become.  |g_fatZombieSize| is the
 // minimum object size which can be made into a fat zombie (which can
@@ -241,8 +251,8 @@
     return YES;

   Class rootClass = [NSObject class];
-  g_originalDeallocIMP =
-      class_getMethodImplementation(rootClass, @selector(dealloc));
+  g_originalDeallocIMP = reinterpret_cast<RealIMP>(
+      class_getMethodImplementation(rootClass, @selector(dealloc)));
   // objc_getClass() so CrZombie doesn't need +class.
   g_zombieClass = objc_getClass("CrZombie");
   g_fatZombieClass = objc_getClass("CrFatZombie");
@@ -335,9 +345,10 @@
   if (!m)
     return false;

-  const IMP prevDeallocIMP = method_setImplementation(m, (IMP)ZombieDealloc);
+  const RealIMP prevDeallocIMP = reinterpret_cast<RealIMP>(
+      method_setImplementation(m, reinterpret_cast<IMP>(ZombieDealloc)));
   DCHECK(prevDeallocIMP == g_originalDeallocIMP ||
-         prevDeallocIMP == (IMP)ZombieDealloc);
+         prevDeallocIMP == reinterpret_cast<RealIMP>(ZombieDealloc));

   // Grab the current set of zombies.  This is thread-safe because
   // only the main thread can change these.
@@ -409,7 +420,7 @@
   // Put back the original implementation of -[NSObject dealloc].
   Method m = class_getInstanceMethod([NSObject class], @selector(dealloc));
   DCHECK(m);
-  method_setImplementation(m, g_originalDeallocIMP);
+  method_setImplementation(m, reinterpret_cast<IMP>(g_originalDeallocIMP));

   // Can safely grab this because it only happens on the main thread.
   const size_t oldCount = g_zombieCount;
diff --git a/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h b/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
index 8626046..430ab8d 100644
--- a/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
+++ b/qtwebengine/src/3rdparty/chromium/base/mac/foundation_util.h
@@ -53,7 +53,10 @@
 typedef unsigned int NSSearchPathDomainMask;
 #endif
 
-#if defined(OS_IOS) || defined(MAC_OS_X_VERSION_10_15)
+// The CSSM_DEPRECATED check is a workaround for a presumably wrong MacOSX SDK detection.
+// This macro was added to the Security.framework in the 10.15 SDK:
+// http://codeworkshop.net/objc-diff/sdkdiffs/macos/10.15/Security.html at SecBase.h
+#if defined(OS_IOS) || (defined(MAC_OS_X_VERSION_10_15) && defined(CSSM_DEPRECATED))
 typedef struct CF_BRIDGED_TYPE(id) __SecCertificate* SecCertificateRef;
 typedef struct CF_BRIDGED_TYPE(id) __SecKey* SecKeyRef;
 typedef struct CF_BRIDGED_TYPE(id) __SecPolicy* SecPolicyRef;
