diff --git a/qtbase/src/gui/painting/qcoregraphics.mm b/qtbase/src/gui/painting/qcoregraphics.mm
--- a/qtbase/src/gui/painting/qcoregraphics.mm
+++ b/qtbase/src/gui/painting/qcoregraphics.mm
@@ -72,31 +72,15 @@
                               image.bytesPerLine(), dataProvider, NULL, false);
 }
 
-OSStatus qt_mac_drawCGImage(CGContextRef inContext, const CGRect *inBounds, CGImageRef inImage)
+void qt_mac_drawCGImage(CGContextRef inContext, const CGRect *inBounds, CGImageRef inImage)
 {
-    // Verbatim copy if HIViewDrawCGImage (as shown on Carbon-Dev)
-    OSStatus err = noErr;
-
-#ifdef Q_OS_MACOS
-    require_action(inContext != NULL, InvalidContext, err = paramErr);
-    require_action(inBounds != NULL, InvalidBounds, err = paramErr);
-    require_action(inImage != NULL, InvalidImage, err = paramErr);
-#endif
-
     CGContextSaveGState( inContext );
     CGContextTranslateCTM (inContext, 0, inBounds->origin.y + CGRectGetMaxY(*inBounds));
     CGContextScaleCTM(inContext, 1, -1);
 
     CGContextDrawImage(inContext, *inBounds, inImage);
 
     CGContextRestoreGState(inContext);
-
-#ifdef Q_OS_MACOS
-InvalidImage:
-InvalidBounds:
-InvalidContext:
-#endif
-    return err;
 }
 
 QImage qt_mac_toQImage(CGImageRef image)
diff --git a/qtbase/src/gui/painting/qcoregraphics_p.h b/qtbase/src/gui/painting/qcoregraphics_p.h
--- a/qtbase/src/gui/painting/qcoregraphics_p.h
+++ b/qtbase/src/gui/painting/qcoregraphics_p.h
@@ -71,7 +71,7 @@
 Q_GUI_EXPORT CGImageRef qt_mac_toCGImageMask(const QImage &qImage);
 Q_GUI_EXPORT QImage qt_mac_toQImage(CGImageRef image);
 
-Q_GUI_EXPORT OSStatus qt_mac_drawCGImage(CGContextRef inContext, const CGRect *inBounds, CGImageRef inImage);
+Q_GUI_EXPORT void qt_mac_drawCGImage(CGContextRef inContext, const CGRect *inBounds, CGImageRef inImage);
 
 Q_GUI_EXPORT CGColorSpaceRef qt_mac_genericColorSpace();
 Q_GUI_EXPORT CGColorSpaceRef qt_mac_colorSpaceForDeviceType(const QPaintDevice *paintDevice);
diff -pur a/qtconnectivity/src/bluetooth/osx/osxbtcentralmanager.mm b/qtconnectivity/src/bluetooth/osx/osxbtcentralmanager.mm
--- a/qtconnectivity/src/bluetooth/osx/osxbtcentralmanager.mm	2017-06-23 08:37:08.000000000 +0200
+++ b/qtconnectivity/src/bluetooth/osx/osxbtcentralmanager.mm	2017-08-22 00:14:58.000000000 +0200
@@ -1032,13 +1032,13 @@ QT_END_NAMESPACE
 {
     using namespace OSXBluetooth;
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     const CBManagerState state = central.state;
 #else
     const CBCentralManagerState state = central.state;
 #endif
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     if (state == CBManagerStateUnknown
         || state == CBManagerStateResetting) {
 #else
@@ -1054,7 +1054,7 @@ QT_END_NAMESPACE
     }
 
     // Let's check some states we do not like first:
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     if (state == CBManagerStateUnsupported || state == CBManagerStateUnauthorized) {
 #else
     if (state == CBCentralManagerStateUnsupported || state == CBCentralManagerStateUnauthorized) {
@@ -1074,7 +1074,7 @@ QT_END_NAMESPACE
         return;
     }
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     if (state == CBManagerStatePoweredOff) {
 #else
     if (state == CBCentralManagerStatePoweredOff) {
@@ -1093,7 +1093,7 @@ QT_END_NAMESPACE
         return;
     }
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     if (state == CBManagerStatePoweredOn) {
 #else
     if (state == CBCentralManagerStatePoweredOn) {
diff -pur a/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm b/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm
--- a/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm	2017-06-23 08:37:08.000000000 +0200
+++ b/qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm	2017-08-22 00:14:17.000000000 +0200
@@ -233,7 +233,7 @@ QT_USE_NAMESPACE
     dispatch_queue_t leQueue(qt_LE_queue());
     Q_ASSERT(leQueue);
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     const CBManagerState state(central.state);
     if (state == CBManagerStatePoweredOn) {
 #else
@@ -260,7 +260,7 @@ QT_USE_NAMESPACE
 
             [manager scanForPeripheralsWithServices:nil options:nil];
         } // Else we ignore.
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     } else if (state == CBManagerStateUnsupported || state == CBManagerStateUnauthorized) {
 #else
     } else if (state == CBCentralManagerStateUnsupported || state == CBCentralManagerStateUnauthorized) {
@@ -277,7 +277,7 @@ QT_USE_NAMESPACE
         }
 
         [manager setDelegate:nil];
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if 1
     } else if (state == CBManagerStatePoweredOff) {
 #else
     } else if (state == CBCentralManagerStatePoweredOff) {
