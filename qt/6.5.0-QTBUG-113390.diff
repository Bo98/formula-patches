diff --git a/qtbase/cmake/QtModuleHelpers.cmake b/qtbase/cmake/QtModuleHelpers.cmake
index cdcd727..0a50357 100644
--- a/qtbase/cmake/QtModuleHelpers.cmake
+++ b/qtbase/cmake/QtModuleHelpers.cmake
@@ -1183,6 +1183,17 @@
 
     qt_internal_get_target_sources(sources ${target})
 
+    get_target_property(target_type ${target} TYPE)
+    if(target_type STREQUAL "INTERFACE_LIBRARY")
+        set(source_dir "${CMAKE_CURRENT_SOURCE_DIR}")
+    else()
+        get_target_property(source_dir ${target} SOURCE_DIR)
+    endif()
+    get_filename_component(source_dir "${source_dir}" ABSOLUTE)
+    get_filename_component(source_dir "${source_dir}" REALPATH)
+
+    get_target_property(is_3rdparty_library ${target} _qt_module_is_3rdparty_header_library)
+
     get_target_property(public_filter ${target} _qt_module_public_headers_filter_regex)
     get_target_property(private_filter ${target} _qt_module_private_headers_filter_regex)
     get_target_property(qpa_filter ${target} _qt_module_qpa_headers_filter_regex)
@@ -1193,6 +1204,28 @@
         if(NOT file_name MATCHES ".+\\.h$")
             continue()
         endif()
+
+        get_source_file_property(non_module_header ${file_path} _qt_non_module_header)
+        if(non_module_header)
+            continue()
+        endif()
+
+        get_filename_component(file_path "${file_path}" ABSOLUTE)
+        get_filename_component(file_path "${file_path}" REALPATH)
+
+        string(FIND "${file_path}" "${source_dir}" source_dir_pos)
+        if(source_dir_pos EQUAL 0)
+            set(is_outside_module_source_dir FALSE)
+        else()
+            set(is_outside_module_source_dir TRUE)
+        endif()
+
+        get_source_file_property(is_generated "${file_path}" GENERATED)
+        # Skip all header files outside the module source directory, except the generated files.
+        if(is_outside_module_source_dir AND NOT is_generated)
+            continue()
+        endif()
+
         get_source_file_property(condition ${file_path} _qt_extend_target_condition)
         if(NOT condition STREQUAL "" AND NOT condition STREQUAL "NOTFOUND")
             list(JOIN condition " " condition_string)
@@ -1201,15 +1234,18 @@
                 "\nCondition:\n    ${condition_string}")
         endif()
 
-        get_source_file_property(is_generated "${file_path}" GENERATED)
-        get_filename_component(file_path "${file_path}" ABSOLUTE)
-        get_filename_component(file_path "${file_path}" REALPATH)
+        if(file_path MATCHES "3rdparty/.+" AND NOT is_3rdparty_library)
+            set(is_3rdparty_header TRUE)
+        else()
+            set(is_3rdparty_header FALSE)
+        endif()
         list(APPEND ${out_var}_all "${file_path}")
         if(qpa_filter AND file_name MATCHES "${qpa_filter}")
             list(APPEND ${out_var}_qpa "${file_path}")
         elseif(private_filter AND file_name MATCHES "${private_filter}")
             list(APPEND ${out_var}_private "${file_path}")
-        elseif(NOT public_filter OR file_name MATCHES "${public_filter}")
+        elseif((NOT public_filter OR file_name MATCHES "${public_filter}")
+            AND NOT is_3rdparty_header)
             list(APPEND ${out_var}_public "${file_path}")
         endif()
         if(is_generated)
diff --git a/qtdeclarative/cmake/QtDeclarativeSetup.cmake b/qtdeclarative/cmake/QtDeclarativeSetup.cmake
index 6f39bef..165a71e 100644
--- a/qtdeclarative/cmake/QtDeclarativeSetup.cmake
+++ b/qtdeclarative/cmake/QtDeclarativeSetup.cmake
@@ -74,5 +74,7 @@
     )
     target_sources(${consuming_target} PRIVATE ${output_file})
     target_include_directories(${consuming_target} PRIVATE $<BUILD_INTERFACE:${generate_dir}>)
-    set_source_files_properties(${output_file} PROPERTIES GENERATED TRUE)
+    set_source_files_properties(${output_file} PROPERTIES
+        GENERATED TRUE
+        _qt_non_module_header TRUE)
 endfunction()
